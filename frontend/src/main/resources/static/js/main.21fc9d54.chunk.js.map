{"version":3,"sources":["components/Banner.jsx","components/Dashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["Banner","props","Dashboard","useState","user","setUser","notification","setNotification","useEffect","axios","method","headers","body","JSON","stringify","then","res","console","log","data","source","EventSource","id","addEventListener","event","onerror","catch","err","Fragment","map","App","className","to","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAMeA,G,MAJA,SAAAC,GACX,OAAO,0C,yCCoCIC,EApCG,SAAAD,GAAU,IAAD,EACCE,mBAAS,IADV,mBAChBC,EADgB,KACVC,EADU,OAEiBF,mBAAS,IAF1B,mBAEhBG,EAFgB,KAEFC,EAFE,KAyBvB,OAtBAC,qBAAU,WACNC,IAAM,cAAe,CACjBC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAE,SAAY,OAAQ,SAAY,WAEtDC,MAAK,SAAAC,GACFC,QAAQC,IAAI,UAAWF,EAAIG,MAC3Bd,EAAQ,eAAKW,EAAIG,OACjB,IAAIC,EAAS,MACbA,EAAS,IAAIC,YAAY,qCAAuCL,EAAIG,KAAKG,KAClEC,iBAAiB,gBAAgB,SAAUC,GAC9C,IAAIL,EAAOK,EAAML,KACjBF,QAAQC,IAAI,gBAAiBC,GAC7BZ,EAAgB,GAAD,mBAAKD,GAAL,CAAmBa,QAEtCC,EAAOK,QAAU,kBAAMR,QAAQC,IAAI,aAEtCQ,OAAM,SAAAC,GAAG,OAAIV,QAAQC,IAAI,QAASS,QACxC,IAEC,eAAC,IAAMC,SAAP,WACI,2CACA,2CACA,4BAAIf,KAAKC,UAAUV,KACnB,+CACCE,EAAauB,KAAI,SAAAvB,GAAY,OAAI,4BAAIO,KAAKC,UAAUR,YCXlDwB,MAjBf,WACE,OACE,qBAAKC,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASC,GAAG,sBAAZ,uBACA,cAAC,IAAD,CAASA,GAAG,mBAAZ,oBACA,4DACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWjC,IACjC,cAAC,IAAD,CAAO+B,KAAK,sBAAsBE,UAAWjC,IAC7C,cAAC,IAAD,CAAO+B,KAAK,mBAAmBE,UAAWnC,aCJrCoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.21fc9d54.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Banner = props => {\r\n    return <h2>Banner</h2>\r\n}\r\n\r\nexport default Banner;","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Dashboard = props => {\r\n    const [user, setUser] = useState({});\r\n    const [notification, setNotification] = useState([]);\r\n    useEffect(() => {\r\n        axios(\"/user/login\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ \"username\": \"test\", \"password\": \"test\" })\r\n        })\r\n            .then(res => {\r\n                console.log(\"success\", res.data);\r\n                setUser({ ...res.data });\r\n                let source = null;\r\n                source = new EventSource(\"/api/v1/notification/notification/\" + res.data.id);\r\n                source.addEventListener(\"notification\", function (event) {\r\n                    var data = event.data;\r\n                    console.log(\"Event data : \", data);\r\n                    setNotification([...notification, data]);\r\n                });\r\n                source.onerror = () => console.log(\"Error\");\r\n            })\r\n            .catch(err => console.log(\"error\", err))\r\n    }, [])\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Dashboard</h2>\r\n            <h3>User data</h3>\r\n            <p>{JSON.stringify(user)}</p>\r\n            <h3>Notifications</h3>\r\n            {notification.map(notification => <p>{JSON.stringify(notification)}</p>)}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import React from \"react\";\nimport { BrowserRouter as Router, NavLink, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Banner from \"./components/Banner\";\nimport Dashboard from \"./components/Dashboard\";\n\nfunction App() {\n  return (\n    <div className=\"App App-header\">\n      <Router>\n        <NavLink to=\"/frontend/dashboard\">Dashboard</NavLink>\n        <NavLink to=\"/frontend/banner\">Banner</NavLink>\n        <h1>Test frontend for foodgrid</h1>\n        <Switch>\n          <Route path=\"/\" exact component={Dashboard} />\n          <Route path=\"/frontend/dashboard\" component={Dashboard} />\n          <Route path=\"/frontend/banner\" component={Banner} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}