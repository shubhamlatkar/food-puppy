version: '3.7'

services:

  database:
    image: mongo:latest
    restart: always
    container_name: database
    networks:
      - foodgrid

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=zookeeper
    networks:
      - foodgrid

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_RETENTION_MS: 10000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
      KAFKA_CREATE_TOPICS: "authentication:1:1"
    depends_on:
      - zookeeper
    networks:
      - foodgrid

  configuration:
    build:
      context: .
      dockerfile: Dockerfile
      target: configuration
    container_name: configuration
    depends_on:
      - database
    restart: always
    networks:
      - foodgrid
    volumes:
      - /usr/share/logData:/usr/share/logData

  eureka:
    build:
      context: .
      dockerfile: Dockerfile
      target: eureka
    container_name: eureka
    depends_on:
      - configuration
      - database
    environment:
      PROFILE: docker
    restart: always
    networks:
      - foodgrid

  gateway:
    build:
      context: .
      dockerfile: Dockerfile
      target: gateway
    container_name: gateway
    ports:
      - 8080:8080
    depends_on:
      - eureka
      - database
    environment:
      PROFILE: docker
    restart: always
    networks:
      - foodgrid

  user:
    build:
      context: .
      dockerfile: Dockerfile
      target: user
    container_name: user
    depends_on:
      - eureka
      - database
    environment:
      MONGO_URI: mongodb://database:27017/foodgrid-user
      PROFILE: docker
    restart: always
    networks:
      - foodgrid

  notification:
    build:
      context: .
      dockerfile: Dockerfile
      target: notification
    container_name: notification
    depends_on:
      - eureka
      - database
    environment:
      MONGO_URI: mongodb://database:27017/foodgrid-notification
      PROFILE: docker
    restart: always
    networks:
      - foodgrid

  restaurant:
    build:
      context: .
      dockerfile: Dockerfile
      target: restaurant
    container_name: restaurant
    depends_on:
      - eureka
      - database
    environment:
      MONGO_URI: mongodb://database:27017/foodgrid-restaurant
      PROFILE: docker
    restart: always
    networks:
      - foodgrid

  order:
    build:
      context: .
      dockerfile: Dockerfile
      target: order
    container_name: order
    depends_on:
      - eureka
      - database
    environment:
      MONGO_URI: mongodb://database:27017/foodgrid-order
      PROFILE: docker
    restart: always
    networks:
      - foodgrid

  delivery:
    build:
      context: .
      dockerfile: Dockerfile
      target: delivery
    container_name: delivery
    depends_on:
      - eureka
      - database
    environment:
      MONGO_URI: mongodb://database:27017/foodgrid-delivery
      PROFILE: docker
    restart: always
    networks:
      - foodgrid

  account:
    build:
      context: .
      dockerfile: Dockerfile
      target: account
    container_name: account
    depends_on:
      - eureka
      - database
    environment:
      MONGO_URI: mongodb://database:27017/foodgrid-account
      PROFILE: docker
    restart: always
    networks:
      - foodgrid

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
    container_name: frontend
    depends_on:
      - eureka
      - database
      - gateway
    environment:
      PROFILE: docker
    restart: always
    networks:
      - foodgrid

  filebeat:
    image: docker.elastic.co/beats/filebeat
    volumes:
      - ./elk/config/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./elk/config/logstash-beats.crt:/etc/pki/tls/certs/logstash-beats.crt
      - /usr/share/logData/:/usr/share/logData/
    ports:
      - "80:80"
    depends_on:
      - gateway
    links:
      - elk
    environment:
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=true
    networks:
      - foodgrid

  elk:
    image: sebp/elk
    depends_on:
      - gateway
    ports:
      - "5601:5601"
      - "9200:9200"
      - "5044:5044"
    networks:
      - foodgrid

networks:
  foodgrid:
