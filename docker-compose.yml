version: '3.7'

services:

  database:
    image: mongo:latest
    restart: always
    container_name: database
    networks:
      - foodgrid

  activemq:
    image: webcenter/activemq
    container_name: activemq
    ports:
      - 8161:8161
    environment:
      ACTIVEMQ_CONFIG_TOPICS_AUTHENTICATION: AUTHENTICATION
      ACTIVEMQ_ENABLED_SCHEDULER: "true"
      ACTIVEMQ_MIN_MEMORY: 512
      ACTIVEMQ_MAX_MEMORY: 2048
    networks:
      - foodgrid

  configuration:
    build:
      context: .
      dockerfile: Dockerfile
      target: configuration
    container_name: configuration
    depends_on:
      - database
    restart: always
    networks:
      - foodgrid

  eureka:
    build:
      context: .
      dockerfile: Dockerfile
      target: eureka
    container_name: eureka
    depends_on:
      - configuration
      - database
    environment:
      PROFILE: docker
    restart: always
    networks:
      - foodgrid

  gateway:
    build:
      context: .
      dockerfile: Dockerfile
      target: gateway
    container_name: gateway
    ports:
      - 8080:8080
    depends_on:
      - eureka
      - database
    environment:
      PROFILE: docker
    restart: always
    networks:
      - foodgrid

  user:
    build:
      context: .
      dockerfile: Dockerfile
      target: user
    container_name: user
    depends_on:
      - eureka
      - database
    environment:
      PROFILE: docker
    restart: always
    networks:
      - foodgrid

  notification:
    build:
      context: .
      dockerfile: Dockerfile
      target: notification
    container_name: notification
    depends_on:
      - eureka
      - database
    environment:
      PROFILE: docker
    restart: always
    networks:
      - foodgrid

  restaurant:
    build:
      context: .
      dockerfile: Dockerfile
      target: restaurant
    container_name: restaurant
    depends_on:
      - eureka
      - database
    environment:
      PROFILE: docker
    restart: always
    networks:
      - foodgrid

  order:
    build:
      context: .
      dockerfile: Dockerfile
      target: order
    container_name: order
    depends_on:
      - eureka
      - database
    environment:
      PROFILE: docker
    restart: always
    networks:
      - foodgrid

  delivery:
    build:
      context: .
      dockerfile: Dockerfile
      target: delivery
    container_name: delivery
    depends_on:
      - eureka
      - database
    environment:
      PROFILE: docker
    restart: always
    networks:
      - foodgrid

  account:
    build:
      context: .
      dockerfile: Dockerfile
      target: account
    container_name: account
    depends_on:
      - eureka
      - database
    environment:
      PROFILE: docker
    restart: always
    networks:
      - foodgrid

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
    container_name: frontend
    depends_on:
      - eureka
      - database
      - gateway
    environment:
      PROFILE: docker
    restart: always
    networks:
      - foodgrid

networks:
  foodgrid:
